version: "3.9"
services:
  postgres14:
      image: 'postgres:14-alpine'
      #restart: always
      container_name: csti-intercorpretail-postgres14
      ports:
        - 5432:5432
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: max123
        POSTGRES_DB: dbtest
      networks:
        - csti-intercorpretail

  zookeeper:
      image: confluentinc/cp-zookeeper
      container_name: csti-intercorpretail-kafka-zookeeper
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      networks:
        - csti

  kafka:
      image: confluentinc/cp-kafka
      container_name: csti-intercorpretail-kafka-broker
      ports:
        - "9092:9092"
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      networks:
        - csti
  microservice1:
    container_name: microservice1
    build:
      context: ./
      dockerfile: ./microservice1/Dockerfile
    ports:
      - "8081:8081"
    env_file: ./microservice1/.env
    volumes:
      - ./xml:/xml
    environment:
      - REGISTRO_RUTA_ARCHIVO=/xml
    networks:
      - csti
    depends_on:
      - postgres14
    restart: always
  microservice2:
    container_name: microservice2
    build:
      context: ./
      dockerfile: ./microservice2/Dockerfile
    ports:
      - "8082:8082"
    env_file: ./microservice2/.env
    networks:
      - csti
    depends_on:
      - postgres14
    restart: always
  microservice3:
    container_name: microservice3
    build:
      context: ./
      dockerfile: ./microservice3/Dockerfile
    ports:
      - "8083:8083"
    env_file: ./microservice3/.env
    networks:
      - csti
    depends_on:
      - postgres14
    restart: always
  app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: ng serve --host 0.0.0.0 --poll 1
    networks:
      - csti-intercorpretail
networks:
  csti:
    driver: bridge